[{"title":"Enumerator","type":0,"sectionRef":"#","url":"/Enumerator/api/Enumerator","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Enumerator","url":"/Enumerator/api/Enumerator#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Enumerator","url":"/Enumerator/api/Enumerator#new","content":"&lt;/&gt; Enumerator.new( type: string,-- The name of the enum type. values: CustomEnum&amp;{[string]: number}-- A table mapping names to values for the enum items. ) → Enumerator&lt;CustomEnum&gt;-- The newly created enumerator. Creates a new Enumerator -- The type definition ensures that only these keys and values are allowed. type FruitEnum = { Apple: number, Banana: number, Cherry: number, } -- Create an Enumerator instance for the `FruitEnum` type local Fruits: Enumerator.Enum&lt;FruitEnum&gt; = Enumerator.new(&quot;Fruits&quot;, { Apple = 1, Banana = 2, Cherry = 3, })   "},{"title":"GetItems​","type":1,"pageTitle":"Enumerator","url":"/Enumerator/api/Enumerator#GetItems","content":"&lt;/&gt; Enumerator:GetItems() → {EnumItem &lt;CustomEnum&gt;}?-- A table of all EnumItem instances in the enum. Retrieves all enum items as a table. local allItems: { Enumerator.EnumItem&lt;FruitEnum&gt; } = Fruits:GetItems() for _, item in allItems do print(item.Name, item.Value) -- Output: &quot;Apple 1&quot;, &quot;Banana 2&quot;, &quot;Cherry 3&quot; end   "},{"title":"GetItemByName​","type":1,"pageTitle":"Enumerator","url":"/Enumerator/api/Enumerator#GetItemByName","content":"&lt;/&gt; Enumerator:GetItemByName( name: string-- The name of the enum item to retrieve. ) → EnumItem &lt;CustomEnum&gt;?-- The enum item with the specified name, or nil if not found. Retrieves an enum item by its name. local bananaItem: Enumerator.EnumItem&lt;FruitEnum&gt;? = Fruits:GetItemByValue(2) if bananaItem then print(bananaItem.Name) -- Output: &quot;Banana&quot; end   "},{"title":"GetItemByValue​","type":1,"pageTitle":"Enumerator","url":"/Enumerator/api/Enumerator#GetItemByValue","content":"&lt;/&gt; Enumerator:GetItemByValue( value: number-- The value of the enum item to retrieve. ) → EnumItem &lt;CustomEnum&gt;?-- The enum item with the specified value, or nil if not found. Retrieves an enum item by its value. local bananaItem: Enumerator.EnumItem&lt;FruitEnum&gt;? = Fruits:GetItemByValue(2) if bananaItem then print(bananaItem.Name) -- Output: &quot;Banana&quot; end  "}]